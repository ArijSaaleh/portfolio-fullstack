// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String
  role      String   @default("admin")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Project {
  id           Int      @id @default(autoincrement())
  title        String
  description  String
  challenge    String   @db.Text
  contribution String   @db.Text
  technologies String[]
  thumbnail    String
  heroImage    String
  videoUrl     String?
  githubUrl    String?
  liveUrl      String?
  accuracy     String?
  speed        String?
  images       String[]
  startDate    String?
  endDate      String?
  published    Boolean  @default(true)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Blog {
  id          Int      @id @default(autoincrement())
  title       String
  slug        String   @unique
  excerpt     String
  content     String   @db.Text
  thumbnail   String
  type        String   // 'article', 'video', 'tutorial'
  readTime    String?  // e.g., "5 min read"
  videoUrl    String?
  pdfUrl      String?  // PDF file URL or path
  published   Boolean  @default(true)
  publishedAt String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Experience {
  id          Int      @id @default(autoincrement())
  company     String
  companyLogo String?  // URL or uploaded image path
  position    String
  description String   @db.Text
  startDate   String
  endDate     String?
  current     Boolean  @default(false)
  skills      String[]
  location    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model ContactMessage {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  message   String   @db.Text
  read      Boolean  @default(false)
  createdAt DateTime @default(now())
}

model Achievement {
  id          Int      @id @default(autoincrement())
  title       String
  description String   @db.Text
  category    String   // 'award', 'participation', 'certification', 'social'
  date        String
  images      String[]
  videoUrl    String?
  link        String?  // External link (certificate, event page, etc.)
  published   Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model PageView {
  id        Int      @id @default(autoincrement())
  page      String   // e.g., '/projects/1', '/blog/my-post', '/about'
  ipAddress String?
  userAgent String?
  referrer  String?
  createdAt DateTime @default(now())
}

model ContentView {
  id          Int      @id @default(autoincrement())
  contentType String   // 'project', 'blog', 'achievement'
  contentId   Int
  createdAt   DateTime @default(now())
  
  @@index([contentType, contentId])
}
